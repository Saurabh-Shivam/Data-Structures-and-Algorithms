class Solution {
public:
    bool searchNext(vector<vector<char>>& board, string& word, int i, int j,
    int index) {
        if (index == word.size()) return true; // all characters matched

        if (i < 0 || j < 0 || i >= board.size() || j >= board[0].size() || 
        board[i][j] != word[index]) return false;

        char temp = board[i][j]; // store current char
        board[i][j] = '#';       // mark visited

        // going down, up, right, left respectively
        bool found = searchNext(board, word, i + 1, j, index + 1) ||
                     searchNext(board, word, i - 1, j, index + 1) ||
                     searchNext(board, word, i, j + 1, index + 1) ||
                     searchNext(board, word, i, j - 1, index + 1);

        board[i][j] = temp; // unmark visited
        return found;
    }

    bool exist(vector<vector<char>>& board, string word) {
        int rows = board.size();
        int cols = board[0].size();

        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                if (searchNext(board, word, i, j, 0))
                    return true;
            }
        }
        return false;
    }
};
