class Solution {
public:

    bool isPalindrome(string s, int start, int end){
        while(start <= end){
            if(s[start++] != s[end--]) return false;
        }
        return true;
    }

    void findPartition(int ind, string &s, vector<string>& curr, vector<vector<string>>& res){
        if(ind == s.size()){
            res.push_back(curr);
            return;
        }
        for(int i=ind; i<s.size(); i++){
            if(isPalindrome(s, ind, i)){
                curr.push_back(s.substr(ind, i - ind + 1));
                findPartition(i+1, s, curr, res);
                curr.pop_back();
            }
        }
    }

    vector<vector<string>> partition(string s) {
        vector<vector<string>>res;
        vector<string>curr;
        findPartition(0, s, curr, res);
        return res;
    }
};