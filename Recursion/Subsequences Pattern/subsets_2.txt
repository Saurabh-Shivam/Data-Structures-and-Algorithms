class Solution {
public:
  void fincurrubsets(int ind, vector < int > & nums, vector < int > & curr, vector < vector < int >> & res) {
        res.push_back(curr);

        for (int i = ind; i < nums.size(); i++) {
        if (i > ind && nums[i] == nums[i - 1]) continue;

        curr.push_back(nums[i]);
        fincurrubsets(i + 1, nums, curr, res);

        curr.pop_back();
        }
    }
    
    vector < vector < int >> subsetsWithDup(vector < int > & nums) {
        vector < vector < int >> res;
        vector < int > curr;
        sort(nums.begin(), nums.end());
        fincurrubsets(0, nums, curr, res);
        return res;
    }
};