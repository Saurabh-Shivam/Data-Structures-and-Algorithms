class Solution {
public:
    int maxProfit(vector<int>& prices) {
    // brute force  
    // int maxProf = 0;
    // int profit = 0;
    // int n = prices.size();
    // for(int i=0; i<n-1; i++){
    //     int buyPrice = prices[i];
    //     for(int j=i+1; j<n; j++){
    //         profit = prices[j] - buyPrice;
    //         maxProf = max(maxProf, profit);
    //     }
    // }
    // return maxProf;

    // optimizing O(n)
    int buyPrice = prices[0];
    int maxProf = 0;
    for (int i = 1; i < prices.size(); i++) {
        // Update the buying price with minimum (always buying the minimum price stock)
        buyPrice = min(buyPrice, prices[i]);
        // Calculate profit if sold today
        int profit = prices[i] - buyPrice;
        // Update maxProfit
        maxProf = max(maxProf, profit);
    }
    return maxProf;


    }
};