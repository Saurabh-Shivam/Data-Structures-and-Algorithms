class Solution {
public:
    bool rotateString(string s, string goal) {
        // if (s.length() != goal.length()) return false;
        // int n = s.length();
        // for (int i = 0; i < n; ++i) {
        //     // rotate by 1 as at each iteration the first 0th element is changed
        //     char first = s[0];
        //     s = s.substr(1) + first;
        //     if (s == goal) return true;
        // }
        // return false;
        
        // optimized
        return s.length() == goal.length() && (s + s).find(goal) != string::npos;
    }
};