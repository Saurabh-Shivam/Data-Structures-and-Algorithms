/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    // TC -> O(n) and SC -> O(h)
    void findRightView(TreeNode* node, vector<int>& ans, int lvl){
        if(node == nullptr) return;
        if(lvl == ans.size()) ans.push_back(node->val);
        // moving right side
        findRightView(node->right, ans, lvl+1);
        // moving left side
        findRightView(node->left, ans, lvl+1);
    }

    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
        findRightView(root, ans, 0);
        return ans;
    }
};