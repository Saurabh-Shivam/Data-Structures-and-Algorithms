/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    bool checkSymmetry(TreeNode* leftSide, TreeNode* rightSide){
        if(leftSide == nullptr || rightSide == nullptr) return leftSide == rightSide;

        if(leftSide->val != rightSide->val) return false;

        return checkSymmetry(leftSide->left, rightSide->right) 
        && checkSymmetry(leftSide->right, rightSide->left);
    }

    bool isSymmetric(TreeNode* root) {
        return root == nullptr || checkSymmetry(root->left, root->right);

    }
};