class Node{
    public:
        int data;
        Node* next;

        Node(int val){
            data = val;;
            next = nullptr;
        }
};

class MyLinkedList {
    Node* head;
public:
    MyLinkedList() {
        head = nullptr;
    }
    
    // getting a value at specific index
    int get(int index) {
        int count = 0;
        Node* temp = head;
        while(temp != nullptr){
            if(count == index) return temp->data;
            temp = temp->next;
            count++;
        }
        return -1;
    }
    
    // adding at head
    void addAtHead(int val) {
        Node* newNode = new Node(val);
        newNode->next = head;
        head = newNode;
    }
    
    // adding at tail
    void addAtTail(int val) {
        Node* newNode = new Node(val);
        if(head == nullptr){
            head = newNode;
            return;
        }
        Node* temp = head;
        while(temp->next != nullptr){
            temp = temp->next;
        }
        temp->next = newNode;
    }
    
    // adding value at specific index
    void addAtIndex(int index, int val) {
        if(index == 0){
            addAtHead(val);
            return;
        }

        int count = 0;
        Node* temp = head;
        while(temp != nullptr && count < index-1){
            temp = temp->next;
            count++;
        }
        if(temp == nullptr) return;
        Node* newNode = new Node(val);
        newNode->next = temp->next;
        temp->next = newNode;
    }
    
    // deleting at specific index
    void deleteAtIndex(int index) {
        if(head == nullptr) return;
        if(index == 0){
            Node* temp = head;
            head = head->next;
            delete temp;
            return;
        }
        int count = 0;
        Node* temp = head;
        while(temp != nullptr && count < index-1){
            temp = temp->next;
            count++;
        }
        if(temp == nullptr || temp->next == nullptr) return;
        Node* toDelete = temp->next;
        temp->next = toDelete->next;
        delete toDelete;
    }
};

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList* obj = new MyLinkedList();
 * int param_1 = obj->get(index);
 * obj->addAtHead(val);
 * obj->addAtTail(val);
 * obj->addAtIndex(index,val);
 * obj->deleteAtIndex(index);
 */